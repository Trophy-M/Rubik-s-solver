from solver import *
from cube import *
import time
import pandas
import numpy as np
def checkRepeats(moves):
    prev = 'k'
    isRepeated = False
    while len(moves) > 0 and isRepeated == False:
        if prev[0] == moves[0][0]:
            isRepeated = True
        
        
        prev = moves.pop(0)
    
    return isRepeated

qmoves = []
for items in standardmoves: qmoves.append([items])
depth, i = 6, -1
starttime = time.time()
reducedmoves = pandas.DataFrame()
movedata = {}
print('generating...')
while len(qmoves) > 0:
    i += 1
    vstart = qmoves.pop(0)
    for items in standardmoves:
        if checkRepeats(vstart + [items]) == False:
            qmoves.append(vstart + [items])
    movedata[i] = {'moves': [vstart], 'length': len(vstart)}
    print(movedata[i])
    if len(qmoves[-1]) > depth:
        endtime = time.time()
        print(endtime-starttime)
        break

reducedmoves = pandas.DataFrame.from_dict(movedata, 'index')
reducedmoves.to_csv('C:/Users/asawi/Documents/Rubiks Solver/Rubik-s-solver/reducedmoves.csv')


